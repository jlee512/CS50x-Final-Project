#-----------------Production Database Development---------------------
/*DROP TABLE if it exists*/
DROP TABLE IF EXISTS testTable;
DROP TABLE IF EXISTS user_badges;
DROP TABLE IF EXISTS user_memories;
DROP TABLE IF EXISTS completed_trips;
DROP TABLE IF EXISTS walks_set;
DROP TABLE IF EXISTS registered_users;

# CREATE USERS TABLE
CREATE TABLE registered_users (
  user_id INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
  username VARCHAR(36) NOT NULL UNIQUE,
  hash BLOB NOT NULL,
  email VARCHAR(254) NOT NULL,
  city VARCHAR(90),
  profile_description TEXT,
  firstname VARCHAR(60),
  lastname VARCHAR(60),
  rank INT NOT NULL
);

CREATE TABLE walks_set (
  walk_id INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
  walk_name VARCHAR (50) NOT NULL UNIQUE,
  class_name VARCHAR(15) NOT NULL UNIQUE,
  background_image VARCHAR(150),
  badge_id INT NOT NULL,
  walk_region VARCHAR(100) NOT NULL,
  walk_country VARCHAR(150) NOT NULL,
  one_way_distance FLOAT NOT NULL,
  loop_track BOOLEAN,
  doc_site_hyperlink VARCHAR(500),
  nz_scale_latitude FLOAT,
  nz_scale_longitude FLOAT,
  great_walks_season_start TIMESTAMP,
  great_walks_season_end TIMESTAMP
);

CREATE TABLE completed_trips (
  trip_id INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
  user_id INT NOT NULL,
  walk_id INT NOT NULL,
  date_started TIMESTAMP,
  date_completed TIMESTAMP,
  FOREIGN KEY (user_id) REFERENCES registered_users (user_id)
  ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (walk_id) REFERENCES walks_set (walk_id)
  ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE user_memories (
  memory_id INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
  trip_id INT NOT NULL,
  headline VARCHAR(500) NOT NULL,
  body TEXT,
  media_path VARCHAR(500) NOT NULL,
  public BOOLEAN,
  FOREIGN KEY (trip_id) REFERENCES completed_trips (trip_id)
  ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE user_badges (
  award_id INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
  badge_id INT NOT NULL,
  user_id INT NOT NULL,
  trip_id INT NOT NULL,
  award_date TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (user_id) REFERENCES registered_users(user_id)
    ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (trip_id) REFERENCES completed_trips(trip_id)
  ON DELETE CASCADE ON UPDATE CASCADE
  CONSTRAINT user_badge UNIQUE (badge_id, user_id)
);